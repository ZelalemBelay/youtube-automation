name: Video Generation and YouTube Upload

on:
  push:
    branches:
      - main # or your branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # Required for Workload Identity Federation if using GCP service account

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # e.g., '3.10', '3.11'

    - name: Install dependencies
      run: |
        # Always upgrade pip first to get the latest dependency resolver
        python -m pip install --upgrade pip

        # Install libraries with version constraints to help pip resolve dependencies
        # These versions are based on generally stable and compatible ranges.
        pip install \
          "pyparsing<3.0.0,>=2.4.2" \
          "httplib2<1.0.0,>=0.19.0" \
          "google-api-python-client<3.0.0,>=2.0.0" \
          google-cloud-aiplatform \
          google-auth-oauthlib \
          requests \
          google-generativeai \
          # Keep all libraries you need. Pip will try to find a compatible set.
          # The key is to constrain the common, problematic transitive dependencies.

    # Authenticate to Google Cloud using Workload Identity Federation
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        # --- CRITICAL FIX HERE ---
        # Replace with the EXACT resource name you copied from GCP.
        # It should be in the format: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/providers/PROVIDER_ID
        workload_identity_provider: 'projects/381781776567/locations/global/workloadIdentityPools/github-pool/providers/github-actions-provider'
        service_account: 'vertex-ai-admin-or-vertex-ai-d@youtube-auto-uploader-463700.iam.gserviceaccount.com'
        # Ensure this service account has Vertex AI User and Service Usage Consumer roles,
        # and Workload Identity User role on the Workload Identity Pool.

    - name: Run Python script
      run: python .github/workflows/vertex_upload.py
      env:
        # GCP Project and Location for Vertex AI (Veo)
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_LOCATION: ${{ secrets.GCP_LOCATION }}
        # Veo Endpoint ID (only needed if using PredictionServiceClient, but let's keep it defined for now)
        VEO_ENDPOINT_ID: ${{ secrets.VEO_ENDPOINT_ID }}

        # Google API Key for Veo (if your python code uses google.generativeai for Veo)
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

        # YouTube API Credentials (from GitHub Secrets)
        YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
        YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
        YOUTUBE_REFRESH_TOKEN: ${{ secrets.YOUTUBE_REFRESH_TOKEN }}
